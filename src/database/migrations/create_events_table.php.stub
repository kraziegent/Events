<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateEventsTable extends Migration
{
    /**
     * Run the migrations.
     */
    public function up()
    {
        Schema::create('event_series', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->json('custom_fields')->nullable();
            $table->timestamps();
        });

        Schema::create('events', function (Blueprint $table) {
            $table->engine = 'InnoDB';
            $table->id();
            $table->unsignedBigInteger('series_id')->nullable();
            $table->timestamp('start_date');
            $table->timestamp('end_date')->nullable();
            $table->integer('image_id')->unsigned()->nullable();
            $table->boolean('status');
            $table->string('title');
            $table->string('slug');
            $table->unsignedBigInteger('venue_id');
            $table->string('address')->nullable(); //can either be a physical address or a url for digital venues
            $table->text('summary');
            $table->longText('body');
            $table->boolean('paid'); //Boolean either paid 1 or free 0
            $table->boolean('public'); //Determines if the event is for registered members only or for the public.
            $table->boolean('registration'); //Determines if public event requires registration
            $table->json('occurence')->nullable(); // frequency and interval
            $table->json('resources')->nullable(); // key & url
            $table->json('custom_fields')->nullable();
            $table->timestamps();
        });

        Schema::create('event_tickets', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('event_id');
            $table->string('type'); // free/paid
            $table->string('restriction'); // whom the ticket applies to.
            $table->string('title');
            $table->char('currency', 3)->nullable();
            $table->decimal('price',19,4)->nullable();
            $table->decimal('vat',19,4)->nullable();
            $table->integer('max')->default(1); // How many tickets can one person purchase at a time.
            $table->timestamps();
        });

        Schema::create('event_contacts', function (Blueprint $table) { //Facilitators/lecturers/delegates/presenters
            $table->id();
            $table->unsignedBigInteger('event_id');
            $table->string('type'); //cordinator/
            $table->boolean('details')->default(1); //to control if we show contact details on the event page.
            $table->string('name');
            $table->string('email')->nullable();
            $table->string('phone')->nullable();
            $table->longText('description')->nullable();
            $table->json('custom_fields')->nullable();
            $table->timestamps();
        });

        Schema::create('event_attendees', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('event_id');
            $table->unsignedBigInteger('ticket_id')->nullable();
            $table->unsignedBigInteger('payment_id')->nullable();
            $table->boolean('payment_status')->nullable();
            $table->integer('amount')->nullable();
            $table->string('name')->nullable();
            $table->string('email');
            $table->timestamp('checked_in_at')->nullable();
            $table->json('custom_fields')->nullable();
            $table->timestamps();
        });

        Schema::create('event_venues', function (Blueprint $table) {
            $table->id();
            $table->string('venue');
            $table->string('type'); //Digital/Physical
            $table->boolean('status');
            $table->string('service')->nullable();
            $table->timestamps();
        });

        Schema::create('event_settings', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('event_id');
            $table->string('key');
            $table->json('value');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down()
    {
        Schema::drop('event_venues');
        Schema::drop('event_settings');
        Schema::drop('event_attendees');
        Schema::drop('event_contacts');
        Schema::drop('event_tickets');
        Schema::drop('events');
        Schema::drop('event_series');
    }
}